<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>

<?php
$ajaxcart = Mage::getStoreConfig('mygeneral/product_list/ajaxcart');
$brandlogo = Mage::getStoreConfig('mygeneral/product_view/brandlogo');
$sku = Mage::getStoreConfig('mygeneral/product_view/sku');
$displaycolumn3 = Mage::getStoreConfig('mygeneral/product_view/display_column3');
$column1 = Mage::getStoreConfig('mygeneral/product_view/column1');
$column2 = Mage::getStoreConfig('mygeneral/product_view/column2');
$column3 = Mage::getStoreConfig('mygeneral/product_view/column3');
?>


<div class="product-view">
    <div class="product-essential">
    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <?php echo $this->getBlockHtml('formkey') ?>
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
	
	<div class="product-name">
	    <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
	</div>
	<div id="messages_product_view"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>	
	    <div class="product-img-box no-both-margin product-img-column grid_<?php echo $column1; ?>">
		<?php echo $this->getChildHtml('media') ?>
	    </div>
	    
	    <div class="product-shop no-both-margin grid_<?php echo $column2; ?>">
		<div class="price-stock">
		    <?php echo $this->getChildHtml('product_type_data') ?>
		</div>
		<?php // echo $this->getReviewsSummaryHtml($_product, false, true)?>
		<?php echo $this->getChildHtml('alert_urls') ?>
		<?php // echo $this->getChildHtml('product_type_data') ?>
		<?php echo $this->getTierPriceHtml() ?>
		<?php echo $this->getChildHtml('extrahint') ?>		
		
		<?php if (!$this->hasOptions()):?>
		    <div class="add-to-box">
			<?php if($_product->isSaleable()): ?>
			    <?php echo $this->getChildHtml('addtocart') ?>
			    <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
				<!--<span class="or"><?php // echo $this->__('OR') ?></span>-->
			    <?php endif; ?>
			<?php endif; ?>
			<?php echo $this->getChildHtml('addto') ?>
		    </div>
		    <?php echo $this->getChildHtml('extra_buttons') ?>
		<?php elseif (!$_product->isSaleable()): ?>
		    <div class="add-to-box">
			<?php echo $this->getChildHtml('addto') ?>
		    </div>
		<?php endif; ?>
    
		<?php echo $this->getChildHtml('other');?>
    
		<?php if ($_product->isSaleable() && $this->hasOptions()):?>
		    <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
		<?php endif;?>
		
		<div class="clearer"></div>
		<?php if ($_product->isSaleable() && $this->hasOptions()):?>
		    <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
		<?php endif;?>		
		
		
		<?php if ($_product->getShortDescription()):?>
		    <div class="short-description">
			<!--<h2><?php // echo $this->__('Quick Overview') ?></h2>-->
			<div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
		    </div>
		<?php endif;?>	
		
		<div class="product-meta">
		    <?php if ($brandlogo == '1') { ?>
			<?php
			$attributes = Mage::getResourceModel('eav/entity_attribute_collection')->setEntityTypeFilter($_product->getResource()->getTypeId())->addFieldToFilter('attribute_code', 'manufacturer');
			$attribute = $attributes->getFirstItem()->setEntity($_product->getResource());
			$manufacturers = $attribute->getSource()->getAllOptions(false); ?>
			<?php $brandlabel = $_product->getAttributeText('manufacturer') ?>
			<?php foreach ($manufacturers as $manufacturer): ?>
			<?php if ($manufacturer['label'] == $brandlabel){ ?>
			<div class="box-brand ">
			    <label class="brand-label"><?php echo $this->__('Brand Logo :') ?></label>
			    <a href="<?php echo Mage::getBaseUrl() ?>catalogsearch/advanced/result/?manufacturer[]=<?php echo $manufacturer['value'] ?>"><img src="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA) . "brandlogo/" .$brandlabel . ".png"; ?>" /></a>
			</div>
			<?php } ?>
			<?php endforeach; ?>
		    <?php } ?>
		    
		    <?php if ($sku == '1') { ?>
		    <div class="sku">
			<label><?php echo $this->__('Product code :') ?></label>
			<?php echo $this->htmlEscape($_product->getSku()) ?>
		    </div>
		    <?php } ?>
		    
		    <?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
		</div>
		<?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-sociallink')->toHtml() ?>
	    </div>
	    
	    <?php if($displaycolumn3 == '1') {  ?>	
		<div class="product-third-column no-both-margin grid_<?php echo $column3; ?> custom-sidebar-right">		
		    <?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-right-block')->toHtml() ?>
		</div>
	    <?php } ?>
    </form>
    
	
    <script type="text/javascript">
    //<![CDATA[
    <?php if($ajaxcart == '1') { ?>
	var productAddToCartForm = new VarienForm('product_addtocart_form');
    	productAddToCartForm.submit = function(button, url) {
		if (this.validator.validate()) {
			var form = this.form;
			var oldUrl = form.action;
			if (url) {
				form.action = url;
			}
			var e = null;
			// Start of our new ajax code
			if (!url) {
				url = jQuery('#product_addtocart_form').attr('action');
			}
			url = url.replace("checkout/cart","ajax/index"); // New Code
			var data = jQuery('#product_addtocart_form').serialize();
			data += '&isAjax=1';
			jQuery('#ajax_loader').show();
			try {
				jQuery.ajax( {
					url : url,
					dataType : 'json',
					type : 'post',
					data : data,
					success : function(data) {
						jQuery('#ajax_loader').hide();
						if(data.status == 'ERROR'){
							alert(data.message);
						}else{
							successMessage(data.message);
							if(jQuery('.block-cart')){
							    jQuery('.block-cart').replaceWith(data.sidebar);
							}
							if(jQuery('.header .links')){
							    jQuery('.header .links').replaceWith(data.toplink);
							}
						}
					}
				});
			} catch (e) {
			}
			// End of our new ajax code
			this.form.action = oldUrl;
			if (e) {
				throw e;
			}
		}
	}.bind(productAddToCartForm);
    productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } else { ?>
    
        var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
    <?php } ?>
    //]]>
    </script>
    </div>
    
    <div class="box-additional box-tabs">
	<?php echo $this->getChildHtml('info_tabs') ?>
    </div>
    <div class="box-additional">
	<?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-bottom-block')->toHtml() ?>
    </div>
    <div class="box-additional box-up-sell">
	<?php echo $this->getChildHtml('upsell_products') ?>
    </div>
    <div class="box-additional box-releted">
	<?php echo $this->getChildHtml('catalog.product.related') ?>
    </div>
    
</div>
